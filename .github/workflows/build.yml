name: 🥳 New Release is on the way

on:
  push:
    tags:
      - 'v*.*.*'

env:
  APP_DEV: false
  # APP_TESTING: false
  # CI: true
  # DEBUG: pw:browser*
  # ELECTRON_SKIP_BINARY_DOWNLOAD: 1
  GH_TOKEN: ${{ secrets.REPO_KEY }}

permissions:
  contents: write

jobs:
  build:
    name: Build, test and publish binaries
    # exec e2e tests do not work on linux
    runs-on: windows-latest

    steps:
      - name: ⬇️ Check out repository code
        uses: actions/checkout@v4

      - name: 🔖 Get Version
        shell: bash
        run: |
          TAG=${{ github.ref_name }}
          echo "VERSION=${TAG#v}" >> $GITHUB_ENV

      - name: 📝 Read CHANGELOG.md and use it as body of new release
        id: read_release
        shell: bash
        run: |
          release_lines=($(grep -n '# Release:' CHANGELOG.md | cut -d: -f1))

          start_line="${release_lines[0]}"
          end_line="${release_lines[1]}"

          text_between_releases=$(sed -n "${start_line},${end_line}p" CHANGELOG.md | sed '$d')

          echo $text_between_releases >> ${{ github.workspace }}/release-notes.md
          text="${text_between_releases//'%'/'%25'}"
          text="${text//$'\n'/'%0A'}"
          text="${text//$'\r'/'%0D'}"
          echo "RELEASE_BODY=$(echo $text)" >> $GITHUB_ENV

      - name: '🔧 Linux: Dpkg changes'
        if: runner.os == 'Linux'
        run: sudo dpkg --add-architecture i386 && sudo apt-get update

      - name: '🍷 Linux: Install wine for building for windows on linux'
        if: runner.os == 'Linux'
        run: sudo apt-get install -y wine32

      - name: '🐧 Linux: Setup xvfb (Linux)'
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install -y xvfb libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xinput0 libxcb-xfixes0
          # start xvfb on (default) display :0
          sudo /usr/bin/Xvfb $DISPLAY -screen 0 1280x1024x24 &

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'
      - name: 📦 Install dependencies
        run: npm ci
      # - name: 📦 Install Playwright deps
      #   run: npx playwright install-deps

      - name: 🏗️ Run build
        run: npm run build
      # - name: Install browser for tests
      #   run: npx playwright install chromium
      - name: '🧪 Linux: Run e2e electron tests'
        if: runner.os == 'Linux'
        run: npm run testlinux:electron
      - name: '🧪 Windows: Run e2e electron tests'
        if: runner.os == 'Windows'
        run: npm run test:electron
      - name: 🧪 Run svelte component tests
        run: npm run test:sveltecomp
      - name: 📁 Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: |
            playwright-report/
            screenshots/
          retention-days: 30

      - name: 🎉 Build and Release electron application
        run: npm run deploy:electron
        env:
          GH_TOKEN: ${{ secrets.REPO_KEY }}

      # - name: 🎉 Release electron application
      #   uses: softprops/action-gh-release@v1
      #   if: startsWith(github.ref, 'refs/tags/')
      #   with:
      #     files: |
      #       dist/latest.yml
      #       dist/TimeTracker-${{env.VERSION}}-linux-x64.tar.gz
      #       dist/TimeTracker-${{env.VERSION}}-win-installer-x64.exe
      #       dist/TimeTracker-${{env.VERSION}}-win-installer-x64.exe.blockmap
      #       dist/TimeTracker-${{env.VERSION}}-win-portable-x64.exe
      #     # body_path: ${{ github.workspace }}/CHANGELOG.md
      #     body: |
      #       ${{ env.RELEASE_BODY }}
